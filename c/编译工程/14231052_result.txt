const       constsym
int           intsym
a              ident
=            becomes
1         unsgnumber
,              comma
b              ident
=            becomes
2         unsgnumber
;          semicolon
const       constsym
char         charsym
c              ident
=            becomes
1              chcon
;          semicolon
n              ident
-              minus
3         unsgnumber
>=               geq
0         unsgnumber
)            rparent
temp           ident
=            becomes
fac            ident
(            lparent
n              ident
-              minus
1         unsgnumber
)            rparent
+               plus
fac            ident
(            lparent
n              ident
-              minus
2         unsgnumber
)            rparent
;          semicolon
return     returnsym
(            lparent
temp           ident
)            rparent
;          semicolon
}             rbrace
char         charsym
test_k         ident
(            lparent
char         charsym
c              ident
)            rparent
{             lbrace
char         charsym
temp           ident
;          semicolon
if             ifsym
(            lparent
c              ident
==               eql
c              chcon
)            rparent
temp           ident
=            becomes
a              chcon
;          semicolon
else         elsesym
temp           ident
=            becomes
b              chcon
;          semicolon
return     returnsym
(            lparent
temp           ident
)            rparent
;          semicolon
}             rbrace
int           intsym
jiecheng       ident
(            lparent
int           intsym
n              ident
)            rparent
{             lbrace
int           intsym
i              ident
,              comma
j              ident
;          semicolon
j              ident
=            becomes
1         unsgnumber
;          semicolon
for           forsym
(            lparent
i              ident
=            becomes
1         unsgnumber
;          semicolon
i              ident
<=               leq
n              ident
;          semicolon
i              ident
=            becomes
i              ident
+               plus
1         unsgnumber
)            rparent
{             lbrace
j              ident
=            becomes
j              ident
*              times
i              ident
;          semicolon
}             rbrace
return     returnsym
(            lparent
j              ident
)            rparent
;          semicolon
}             rbrace
void         voidsym
judge          ident
(            lparent
int           intsym
n              ident
)            rparent
{             lbrace
if             ifsym
(            lparent
n              ident
>                gtr
0         unsgnumber
)            rparent
printf     printfsym
(            lparent
zhe ge shu shi zheng shu !    strcon
)            rparent
;          semicolon
else         elsesym
printf     printfsym
(            lparent
zhe ge shu shi fu shu !    strcon
)            rparent
;          semicolon
return     returnsym
;          semicolon
}             rbrace
int           intsym
mul            ident
(            lparent
int           intsym
a              ident
,              comma
int           intsym
b              ident
)            rparent
{             lbrace
return     returnsym
(            lparent
a              ident
*              times
b              ident
)            rparent
;          semicolon
}             rbrace
void         voidsym
main         mainsym
(            lparent
)            rparent
{             lbrace
const       constsym
int           intsym
a              ident
=            becomes
1         unsgnumber
,              comma
b              ident
=            becomes
2         unsgnumber
,              comma
c              ident
=            becomes
3         unsgnumber
;          semicolon
int           intsym
i              ident
,              comma
j              ident
,              comma
k              ident
,              comma
n              ident
,              comma
f1             ident
,              comma
f2             ident
;          semicolon
int           intsym
a1             ident
[             lbrack
100       unsgnumber
]             rbrack
;          semicolon
char         charsym
ch1            ident
,              comma
ch2            ident
,              comma
ch3            ident
;          semicolon
scanf       scanfsym
(            lparent
n              ident
,              comma
ch1            ident
,              comma
k              ident
)            rparent
;          semicolon
i              ident
=            becomes
0         unsgnumber
;          semicolon
do             dosym
{             lbrace
a1             ident
[             lbrack
i              ident
]             rbrack
=            becomes
i              ident
;          semicolon
i              ident
=            becomes
i              ident
+               plus
1         unsgnumber
;          semicolon
}             rbrace
while       whilesym
(            lparent
i              ident
<                lss
100       unsgnumber
)            rparent
f1             ident
=            becomes
fac            ident
(            lparent
n              ident
)            rparent
;          semicolon
f2             ident
=            becomes
jiecheng       ident
(            lparent
n              ident
)            rparent
;          semicolon
ch2            ident
=            becomes
test_k         ident
(            lparent
ch1            ident
)            rparent
;          semicolon
judge          ident
(            lparent
k              ident
)            rparent
;          semicolon
printf     printfsym
(            lparent
f1             ident
)            rparent
;          semicolon
printf     printfsym
(            lparent
f2             ident
)            rparent
;          semicolon
printf     printfsym
(            lparent
ch2            ident
)            rparent
;          semicolon
printf     printfsym
(            lparent
hello world!    strcon
)            rparent
;          semicolon
printf     printfsym
(            lparent
a              ident
+               plus
b              ident
)            rparent
printf     printfsym
(            lparent
n              ident
,              comma
k              ident
)            rparent
;          semicolon
return     returnsym
(            lparent
0         unsgnumber
)            rparent
;          semicolon
}             rbrace
